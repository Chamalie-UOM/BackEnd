{"version":3,"sources":["webpack:///./node_modules/@coreui/coreui/dist/js/coreui-utilities.js"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,KAA4D;AAC9D,EAAE,SACyD;AAC3D,CAAC,2BAA2B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,oBAAoB,YAAY,EAAE;AAClC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,QAAQ,mBAAmB,UAAU,EAAE,EAAE;AAC5E,GAAG;;AAEH,qCAAqC;AACrC;;AAEA;AACA,kFAAkF,OAAO;;AAEzF;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;;AAEnB;AACA;AACA;;AAEA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB;;AAEzB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,UAAU;AAClC,KAAK;AACL,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK,gBAAgB;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,gBAAgB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA,sDAAsD;;AAEtD;AACA,uEAAuE;AACvE,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,GAAG;;AAEH;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,2CAA2C;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,yEAAyE;AACzE;;AAEA;AACA;;AAEA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;;AAEA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,YAAY,eAAe;AAClC;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,uDAAuD;AACvD,KAAK;AACL,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,cAAc,EAAE;AAC/D,0BAA0B,+CAA+C;AACzE,GAAG,qCAAqC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA,WAAW,uEAAuE;AAClF;AACA,GAAG;;AAEH,+CAA+C,eAAe,EAAE;;AAEhE;AACA;AACA,WAAW,4DAA4D;AACvE;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,wDAAwD,0BAA0B;AAClF;;AAEA;AACA;AACA;AACA,KAAK;;;AAGL,8BAA8B;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,2BAA2B,4CAA4C;AACvE;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,UAAU;AACzC;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,6BAA6B,mBAAmB,aAAa;;AAE7D;AACA;AACA;AACA;AACA,+CAA+C,WAAW;AAC1D;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,kBAAkB;AAClB;AACA,gBAAgB;AAChB,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC,4CAA4C;AAC9E;AACA;AACA,6BAA6B,uCAAuC;AACpE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mBAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uCAAuC,iCAAiC,EAAE;;AAE1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,2BAA2B,mBAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA,WAAW,gDAAgD;AAC3D;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,uBAAuB,qDAAqD;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,gCAAgC;AAChC,iCAAiC;AACjC,iCAAiC;AACjC,uCAAuC;AACvC,WAAW,iCAAiC;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iDAAiD,SAAS,EAAE;AAC5D,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA,mCAAmC,QAAQ;AAC3C;;AAEA,oCAAoC,QAAQ;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sDAAsD,8BAA8B;AACpF,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,EAAE,EAAE,IAAI;;AAEjD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yCAAyC,EAAE,EAAE,IAAI;;AAEjD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,yDAAyD;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,kDAAkD,kBAAkB,EAAE;;AAEtE;AACA;AACA;AACA;AACA,KAAK,gBAAgB;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA,2DAA2D,eAAe;AAC1E;;AAEA;AACA;AACA;;AAEA,uCAAuC,6BAA6B,0BAA0B,YAAY,EAAE;AAC5G;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG,eAAe;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gDAAgD,cAAc;;AAE9D,CAAC;AACD","file":"default~views-theme-theme-module~views-widgets-widgets-module.js","sourcesContent":["/*!\r\n  * CoreUI v2.1.11 (https://coreui.io)\r\n  * Copyright 2019 Łukasz Holeczek\r\n  * Licensed under MIT (https://coreui.io)\r\n  */\r\n(function (global, factory) {\r\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\r\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\r\n  (global = global || self, factory(global.utilities = {}));\r\n}(this, function (exports) { 'use strict';\r\n\r\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * CoreUI Utilities (v2.1.11): classes.js\r\n   * Licensed under MIT (https://coreui.io/license)\r\n   * --------------------------------------------------------------------------\r\n   */\r\n  var sidebarCssClasses = ['sidebar-show', 'sidebar-sm-show', 'sidebar-md-show', 'sidebar-lg-show', 'sidebar-xl-show'];\r\n  var asideMenuCssClasses = ['aside-menu-show', 'aside-menu-sm-show', 'aside-menu-md-show', 'aside-menu-lg-show', 'aside-menu-xl-show'];\r\n  var validBreakpoints = ['sm', 'md', 'lg', 'xl'];\r\n  function checkBreakpoint(breakpoint, list) {\r\n    return list.indexOf(breakpoint) > -1;\r\n  }\r\n\r\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\r\n\r\n  function createCommonjsModule(fn, module) {\r\n  \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\r\n  }\r\n\r\n  var O = 'object';\r\n  var check = function (it) {\r\n    return it && it.Math == Math && it;\r\n  };\r\n\r\n  // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\r\n  var global_1 =\r\n    // eslint-disable-next-line no-undef\r\n    check(typeof globalThis == O && globalThis) ||\r\n    check(typeof window == O && window) ||\r\n    check(typeof self == O && self) ||\r\n    check(typeof commonjsGlobal == O && commonjsGlobal) ||\r\n    // eslint-disable-next-line no-new-func\r\n    Function('return this')();\r\n\r\n  var fails = function (exec) {\r\n    try {\r\n      return !!exec();\r\n    } catch (error) {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  // Thank's IE8 for his funny defineProperty\r\n  var descriptors = !fails(function () {\r\n    return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\r\n  });\r\n\r\n  var nativePropertyIsEnumerable = {}.propertyIsEnumerable;\r\n  var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\r\n\r\n  // Nashorn ~ JDK8 bug\r\n  var NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);\r\n\r\n  var f = NASHORN_BUG ? function propertyIsEnumerable(V) {\r\n    var descriptor = getOwnPropertyDescriptor(this, V);\r\n    return !!descriptor && descriptor.enumerable;\r\n  } : nativePropertyIsEnumerable;\r\n\r\n  var objectPropertyIsEnumerable = {\r\n  \tf: f\r\n  };\r\n\r\n  var createPropertyDescriptor = function (bitmap, value) {\r\n    return {\r\n      enumerable: !(bitmap & 1),\r\n      configurable: !(bitmap & 2),\r\n      writable: !(bitmap & 4),\r\n      value: value\r\n    };\r\n  };\r\n\r\n  var toString = {}.toString;\r\n\r\n  var classofRaw = function (it) {\r\n    return toString.call(it).slice(8, -1);\r\n  };\r\n\r\n  // fallback for non-array-like ES3 and non-enumerable old V8 strings\r\n\r\n\r\n\r\n  var split = ''.split;\r\n\r\n  var indexedObject = fails(function () {\r\n    // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\r\n    // eslint-disable-next-line no-prototype-builtins\r\n    return !Object('z').propertyIsEnumerable(0);\r\n  }) ? function (it) {\r\n    return classofRaw(it) == 'String' ? split.call(it, '') : Object(it);\r\n  } : Object;\r\n\r\n  // `RequireObjectCoercible` abstract operation\r\n  // https://tc39.github.io/ecma262/#sec-requireobjectcoercible\r\n  var requireObjectCoercible = function (it) {\r\n    if (it == undefined) throw TypeError(\"Can't call method on \" + it);\r\n    return it;\r\n  };\r\n\r\n  // toObject with fallback for non-array-like ES3 strings\r\n\r\n\r\n\r\n  var toIndexedObject = function (it) {\r\n    return indexedObject(requireObjectCoercible(it));\r\n  };\r\n\r\n  var isObject = function (it) {\r\n    return typeof it === 'object' ? it !== null : typeof it === 'function';\r\n  };\r\n\r\n  // 7.1.1 ToPrimitive(input [, PreferredType])\r\n  // instead of the ES6 spec version, we didn't implement @@toPrimitive case\r\n  // and the second argument - flag - preferred type is a string\r\n  var toPrimitive = function (it, S) {\r\n    if (!isObject(it)) return it;\r\n    var fn, val;\r\n    if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\r\n    if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\r\n    if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\r\n    throw TypeError(\"Can't convert object to primitive value\");\r\n  };\r\n\r\n  var hasOwnProperty = {}.hasOwnProperty;\r\n\r\n  var has = function (it, key) {\r\n    return hasOwnProperty.call(it, key);\r\n  };\r\n\r\n  var document$1 = global_1.document;\r\n  // typeof document.createElement is 'object' in old IE\r\n  var exist = isObject(document$1) && isObject(document$1.createElement);\r\n\r\n  var documentCreateElement = function (it) {\r\n    return exist ? document$1.createElement(it) : {};\r\n  };\r\n\r\n  // Thank's IE8 for his funny defineProperty\r\n  var ie8DomDefine = !descriptors && !fails(function () {\r\n    return Object.defineProperty(documentCreateElement('div'), 'a', {\r\n      get: function () { return 7; }\r\n    }).a != 7;\r\n  });\r\n\r\n  var nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\r\n\r\n  var f$1 = descriptors ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\r\n    O = toIndexedObject(O);\r\n    P = toPrimitive(P, true);\r\n    if (ie8DomDefine) try {\r\n      return nativeGetOwnPropertyDescriptor(O, P);\r\n    } catch (error) { /* empty */ }\r\n    if (has(O, P)) return createPropertyDescriptor(!objectPropertyIsEnumerable.f.call(O, P), O[P]);\r\n  };\r\n\r\n  var objectGetOwnPropertyDescriptor = {\r\n  \tf: f$1\r\n  };\r\n\r\n  var anObject = function (it) {\r\n    if (!isObject(it)) {\r\n      throw TypeError(String(it) + ' is not an object');\r\n    } return it;\r\n  };\r\n\r\n  var nativeDefineProperty = Object.defineProperty;\r\n\r\n  var f$2 = descriptors ? nativeDefineProperty : function defineProperty(O, P, Attributes) {\r\n    anObject(O);\r\n    P = toPrimitive(P, true);\r\n    anObject(Attributes);\r\n    if (ie8DomDefine) try {\r\n      return nativeDefineProperty(O, P, Attributes);\r\n    } catch (error) { /* empty */ }\r\n    if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\r\n    if ('value' in Attributes) O[P] = Attributes.value;\r\n    return O;\r\n  };\r\n\r\n  var objectDefineProperty = {\r\n  \tf: f$2\r\n  };\r\n\r\n  var hide = descriptors ? function (object, key, value) {\r\n    return objectDefineProperty.f(object, key, createPropertyDescriptor(1, value));\r\n  } : function (object, key, value) {\r\n    object[key] = value;\r\n    return object;\r\n  };\r\n\r\n  var setGlobal = function (key, value) {\r\n    try {\r\n      hide(global_1, key, value);\r\n    } catch (error) {\r\n      global_1[key] = value;\r\n    } return value;\r\n  };\r\n\r\n  var shared = createCommonjsModule(function (module) {\r\n  var SHARED = '__core-js_shared__';\r\n  var store = global_1[SHARED] || setGlobal(SHARED, {});\r\n\r\n  (module.exports = function (key, value) {\r\n    return store[key] || (store[key] = value !== undefined ? value : {});\r\n  })('versions', []).push({\r\n    version: '3.1.3',\r\n    mode: 'global',\r\n    copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\r\n  });\r\n  });\r\n\r\n  var functionToString = shared('native-function-to-string', Function.toString);\r\n\r\n  var WeakMap = global_1.WeakMap;\r\n\r\n  var nativeWeakMap = typeof WeakMap === 'function' && /native code/.test(functionToString.call(WeakMap));\r\n\r\n  var id = 0;\r\n  var postfix = Math.random();\r\n\r\n  var uid = function (key) {\r\n    return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + postfix).toString(36));\r\n  };\r\n\r\n  var keys = shared('keys');\r\n\r\n  var sharedKey = function (key) {\r\n    return keys[key] || (keys[key] = uid(key));\r\n  };\r\n\r\n  var hiddenKeys = {};\r\n\r\n  var WeakMap$1 = global_1.WeakMap;\r\n  var set, get, has$1;\r\n\r\n  var enforce = function (it) {\r\n    return has$1(it) ? get(it) : set(it, {});\r\n  };\r\n\r\n  var getterFor = function (TYPE) {\r\n    return function (it) {\r\n      var state;\r\n      if (!isObject(it) || (state = get(it)).type !== TYPE) {\r\n        throw TypeError('Incompatible receiver, ' + TYPE + ' required');\r\n      } return state;\r\n    };\r\n  };\r\n\r\n  if (nativeWeakMap) {\r\n    var store = new WeakMap$1();\r\n    var wmget = store.get;\r\n    var wmhas = store.has;\r\n    var wmset = store.set;\r\n    set = function (it, metadata) {\r\n      wmset.call(store, it, metadata);\r\n      return metadata;\r\n    };\r\n    get = function (it) {\r\n      return wmget.call(store, it) || {};\r\n    };\r\n    has$1 = function (it) {\r\n      return wmhas.call(store, it);\r\n    };\r\n  } else {\r\n    var STATE = sharedKey('state');\r\n    hiddenKeys[STATE] = true;\r\n    set = function (it, metadata) {\r\n      hide(it, STATE, metadata);\r\n      return metadata;\r\n    };\r\n    get = function (it) {\r\n      return has(it, STATE) ? it[STATE] : {};\r\n    };\r\n    has$1 = function (it) {\r\n      return has(it, STATE);\r\n    };\r\n  }\r\n\r\n  var internalState = {\r\n    set: set,\r\n    get: get,\r\n    has: has$1,\r\n    enforce: enforce,\r\n    getterFor: getterFor\r\n  };\r\n\r\n  var redefine = createCommonjsModule(function (module) {\r\n  var getInternalState = internalState.get;\r\n  var enforceInternalState = internalState.enforce;\r\n  var TEMPLATE = String(functionToString).split('toString');\r\n\r\n  shared('inspectSource', function (it) {\r\n    return functionToString.call(it);\r\n  });\r\n\r\n  (module.exports = function (O, key, value, options) {\r\n    var unsafe = options ? !!options.unsafe : false;\r\n    var simple = options ? !!options.enumerable : false;\r\n    var noTargetGet = options ? !!options.noTargetGet : false;\r\n    if (typeof value == 'function') {\r\n      if (typeof key == 'string' && !has(value, 'name')) hide(value, 'name', key);\r\n      enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');\r\n    }\r\n    if (O === global_1) {\r\n      if (simple) O[key] = value;\r\n      else setGlobal(key, value);\r\n      return;\r\n    } else if (!unsafe) {\r\n      delete O[key];\r\n    } else if (!noTargetGet && O[key]) {\r\n      simple = true;\r\n    }\r\n    if (simple) O[key] = value;\r\n    else hide(O, key, value);\r\n  // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\r\n  })(Function.prototype, 'toString', function toString() {\r\n    return typeof this == 'function' && getInternalState(this).source || functionToString.call(this);\r\n  });\r\n  });\r\n\r\n  var ceil = Math.ceil;\r\n  var floor = Math.floor;\r\n\r\n  // `ToInteger` abstract operation\r\n  // https://tc39.github.io/ecma262/#sec-tointeger\r\n  var toInteger = function (argument) {\r\n    return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\r\n  };\r\n\r\n  var min = Math.min;\r\n\r\n  // `ToLength` abstract operation\r\n  // https://tc39.github.io/ecma262/#sec-tolength\r\n  var toLength = function (argument) {\r\n    return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\r\n  };\r\n\r\n  var max = Math.max;\r\n  var min$1 = Math.min;\r\n\r\n  // Helper for a popular repeating case of the spec:\r\n  // Let integer be ? ToInteger(index).\r\n  // If integer < 0, let result be max((length + integer), 0); else let result be min(length, length).\r\n  var toAbsoluteIndex = function (index, length) {\r\n    var integer = toInteger(index);\r\n    return integer < 0 ? max(integer + length, 0) : min$1(integer, length);\r\n  };\r\n\r\n  // `Array.prototype.{ indexOf, includes }` methods implementation\r\n  // false -> Array#indexOf\r\n  // https://tc39.github.io/ecma262/#sec-array.prototype.indexof\r\n  // true  -> Array#includes\r\n  // https://tc39.github.io/ecma262/#sec-array.prototype.includes\r\n  var arrayIncludes = function (IS_INCLUDES) {\r\n    return function ($this, el, fromIndex) {\r\n      var O = toIndexedObject($this);\r\n      var length = toLength(O.length);\r\n      var index = toAbsoluteIndex(fromIndex, length);\r\n      var value;\r\n      // Array#includes uses SameValueZero equality algorithm\r\n      // eslint-disable-next-line no-self-compare\r\n      if (IS_INCLUDES && el != el) while (length > index) {\r\n        value = O[index++];\r\n        // eslint-disable-next-line no-self-compare\r\n        if (value != value) return true;\r\n      // Array#indexOf ignores holes, Array#includes - not\r\n      } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\r\n        if (O[index] === el) return IS_INCLUDES || index || 0;\r\n      } return !IS_INCLUDES && -1;\r\n    };\r\n  };\r\n\r\n  var arrayIndexOf = arrayIncludes(false);\r\n\r\n  var objectKeysInternal = function (object, names) {\r\n    var O = toIndexedObject(object);\r\n    var i = 0;\r\n    var result = [];\r\n    var key;\r\n    for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);\r\n    // Don't enum bug & hidden keys\r\n    while (names.length > i) if (has(O, key = names[i++])) {\r\n      ~arrayIndexOf(result, key) || result.push(key);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  // IE8- don't enum bug keys\r\n  var enumBugKeys = [\r\n    'constructor',\r\n    'hasOwnProperty',\r\n    'isPrototypeOf',\r\n    'propertyIsEnumerable',\r\n    'toLocaleString',\r\n    'toString',\r\n    'valueOf'\r\n  ];\r\n\r\n  // 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\r\n\r\n\r\n\r\n  var hiddenKeys$1 = enumBugKeys.concat('length', 'prototype');\r\n\r\n  var f$3 = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\r\n    return objectKeysInternal(O, hiddenKeys$1);\r\n  };\r\n\r\n  var objectGetOwnPropertyNames = {\r\n  \tf: f$3\r\n  };\r\n\r\n  var f$4 = Object.getOwnPropertySymbols;\r\n\r\n  var objectGetOwnPropertySymbols = {\r\n  \tf: f$4\r\n  };\r\n\r\n  var Reflect = global_1.Reflect;\r\n\r\n  // all object keys, includes non-enumerable and symbols\r\n  var ownKeys = Reflect && Reflect.ownKeys || function ownKeys(it) {\r\n    var keys = objectGetOwnPropertyNames.f(anObject(it));\r\n    var getOwnPropertySymbols = objectGetOwnPropertySymbols.f;\r\n    return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;\r\n  };\r\n\r\n  var copyConstructorProperties = function (target, source) {\r\n    var keys = ownKeys(source);\r\n    var defineProperty = objectDefineProperty.f;\r\n    var getOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;\r\n    for (var i = 0; i < keys.length; i++) {\r\n      var key = keys[i];\r\n      if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));\r\n    }\r\n  };\r\n\r\n  var replacement = /#|\\.prototype\\./;\r\n\r\n  var isForced = function (feature, detection) {\r\n    var value = data[normalize(feature)];\r\n    return value == POLYFILL ? true\r\n      : value == NATIVE ? false\r\n      : typeof detection == 'function' ? fails(detection)\r\n      : !!detection;\r\n  };\r\n\r\n  var normalize = isForced.normalize = function (string) {\r\n    return String(string).replace(replacement, '.').toLowerCase();\r\n  };\r\n\r\n  var data = isForced.data = {};\r\n  var NATIVE = isForced.NATIVE = 'N';\r\n  var POLYFILL = isForced.POLYFILL = 'P';\r\n\r\n  var isForced_1 = isForced;\r\n\r\n  var getOwnPropertyDescriptor$1 = objectGetOwnPropertyDescriptor.f;\r\n\r\n\r\n\r\n\r\n\r\n\r\n  /*\r\n    options.target      - name of the target object\r\n    options.global      - target is the global object\r\n    options.stat        - export as static methods of target\r\n    options.proto       - export as prototype methods of target\r\n    options.real        - real prototype method for the `pure` version\r\n    options.forced      - export even if the native feature is available\r\n    options.bind        - bind methods to the target, required for the `pure` version\r\n    options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\r\n    options.unsafe      - use the simple assignment of property instead of delete + defineProperty\r\n    options.sham        - add a flag to not completely full polyfills\r\n    options.enumerable  - export as enumerable property\r\n    options.noTargetGet - prevent calling a getter on target\r\n  */\r\n  var _export = function (options, source) {\r\n    var TARGET = options.target;\r\n    var GLOBAL = options.global;\r\n    var STATIC = options.stat;\r\n    var FORCED, target, key, targetProperty, sourceProperty, descriptor;\r\n    if (GLOBAL) {\r\n      target = global_1;\r\n    } else if (STATIC) {\r\n      target = global_1[TARGET] || setGlobal(TARGET, {});\r\n    } else {\r\n      target = (global_1[TARGET] || {}).prototype;\r\n    }\r\n    if (target) for (key in source) {\r\n      sourceProperty = source[key];\r\n      if (options.noTargetGet) {\r\n        descriptor = getOwnPropertyDescriptor$1(target, key);\r\n        targetProperty = descriptor && descriptor.value;\r\n      } else targetProperty = target[key];\r\n      FORCED = isForced_1(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\r\n      // contained in target\r\n      if (!FORCED && targetProperty !== undefined) {\r\n        if (typeof sourceProperty === typeof targetProperty) continue;\r\n        copyConstructorProperties(sourceProperty, targetProperty);\r\n      }\r\n      // add a flag to not completely full polyfills\r\n      if (options.sham || (targetProperty && targetProperty.sham)) {\r\n        hide(sourceProperty, 'sham', true);\r\n      }\r\n      // extend global\r\n      redefine(target, key, sourceProperty, options);\r\n    }\r\n  };\r\n\r\n  // 19.1.2.14 / 15.2.3.14 Object.keys(O)\r\n  var objectKeys = Object.keys || function keys(O) {\r\n    return objectKeysInternal(O, enumBugKeys);\r\n  };\r\n\r\n  // `ToObject` abstract operation\r\n  // https://tc39.github.io/ecma262/#sec-toobject\r\n  var toObject = function (argument) {\r\n    return Object(requireObjectCoercible(argument));\r\n  };\r\n\r\n  var nativeAssign = Object.assign;\r\n\r\n  // 19.1.2.1 Object.assign(target, source, ...)\r\n  // should work with symbols and should have deterministic property order (V8 bug)\r\n  var objectAssign = !nativeAssign || fails(function () {\r\n    var A = {};\r\n    var B = {};\r\n    // eslint-disable-next-line no-undef\r\n    var symbol = Symbol();\r\n    var alphabet = 'abcdefghijklmnopqrst';\r\n    A[symbol] = 7;\r\n    alphabet.split('').forEach(function (chr) { B[chr] = chr; });\r\n    return nativeAssign({}, A)[symbol] != 7 || objectKeys(nativeAssign({}, B)).join('') != alphabet;\r\n  }) ? function assign(target, source) { // eslint-disable-line no-unused-vars\r\n    var T = toObject(target);\r\n    var argumentsLength = arguments.length;\r\n    var index = 1;\r\n    var getOwnPropertySymbols = objectGetOwnPropertySymbols.f;\r\n    var propertyIsEnumerable = objectPropertyIsEnumerable.f;\r\n    while (argumentsLength > index) {\r\n      var S = indexedObject(arguments[index++]);\r\n      var keys = getOwnPropertySymbols ? objectKeys(S).concat(getOwnPropertySymbols(S)) : objectKeys(S);\r\n      var length = keys.length;\r\n      var j = 0;\r\n      var key;\r\n      while (length > j) {\r\n        key = keys[j++];\r\n        if (!descriptors || propertyIsEnumerable.call(S, key)) T[key] = S[key];\r\n      }\r\n    } return T;\r\n  } : nativeAssign;\r\n\r\n  // `Object.assign` method\r\n  // https://tc39.github.io/ecma262/#sec-object.assign\r\n  _export({ target: 'Object', stat: true, forced: Object.assign !== objectAssign }, {\r\n    assign: objectAssign\r\n  });\r\n\r\n  var FAILS_ON_PRIMITIVES = fails(function () { objectKeys(1); });\r\n\r\n  // `Object.keys` method\r\n  // https://tc39.github.io/ecma262/#sec-object.keys\r\n  _export({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {\r\n    keys: function keys(it) {\r\n      return objectKeys(toObject(it));\r\n    }\r\n  });\r\n\r\n  var deepObjectsMerge = function deepObjectsMerge(target, source) {\r\n    // Iterate through `source` properties and if an `Object` set property to merge of `target` and `source` properties\r\n    for (var _i = 0, _Object$keys = Object.keys(source); _i < _Object$keys.length; _i++) {\r\n      var key = _Object$keys[_i];\r\n\r\n      if (source[key] instanceof Object) {\r\n        Object.assign(source[key], deepObjectsMerge(target[key], source[key]));\r\n      }\r\n    } // Join `target` and modified `source`\r\n\r\n\r\n    Object.assign(target || {}, source);\r\n    return target;\r\n  };\r\n\r\n  var nativeSymbol = !!Object.getOwnPropertySymbols && !fails(function () {\r\n    // Chrome 38 Symbol has incorrect toString conversion\r\n    // eslint-disable-next-line no-undef\r\n    return !String(Symbol());\r\n  });\r\n\r\n  var Symbol$1 = global_1.Symbol;\r\n  var store$1 = shared('wks');\r\n\r\n  var wellKnownSymbol = function (name) {\r\n    return store$1[name] || (store$1[name] = nativeSymbol && Symbol$1[name]\r\n      || (nativeSymbol ? Symbol$1 : uid)('Symbol.' + name));\r\n  };\r\n\r\n  // `RegExp.prototype.flags` getter implementation\r\n  // https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags\r\n  var regexpFlags = function () {\r\n    var that = anObject(this);\r\n    var result = '';\r\n    if (that.global) result += 'g';\r\n    if (that.ignoreCase) result += 'i';\r\n    if (that.multiline) result += 'm';\r\n    if (that.unicode) result += 'u';\r\n    if (that.sticky) result += 'y';\r\n    return result;\r\n  };\r\n\r\n  var nativeExec = RegExp.prototype.exec;\r\n  // This always refers to the native implementation, because the\r\n  // String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\r\n  // which loads this file before patching the method.\r\n  var nativeReplace = String.prototype.replace;\r\n\r\n  var patchedExec = nativeExec;\r\n\r\n  var UPDATES_LAST_INDEX_WRONG = (function () {\r\n    var re1 = /a/;\r\n    var re2 = /b*/g;\r\n    nativeExec.call(re1, 'a');\r\n    nativeExec.call(re2, 'a');\r\n    return re1.lastIndex !== 0 || re2.lastIndex !== 0;\r\n  })();\r\n\r\n  // nonparticipating capturing group, copied from es5-shim's String#split patch.\r\n  var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\r\n\r\n  var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;\r\n\r\n  if (PATCH) {\r\n    patchedExec = function exec(str) {\r\n      var re = this;\r\n      var lastIndex, reCopy, match, i;\r\n\r\n      if (NPCG_INCLUDED) {\r\n        reCopy = new RegExp('^' + re.source + '$(?!\\\\s)', regexpFlags.call(re));\r\n      }\r\n      if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\r\n\r\n      match = nativeExec.call(re, str);\r\n\r\n      if (UPDATES_LAST_INDEX_WRONG && match) {\r\n        re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\r\n      }\r\n      if (NPCG_INCLUDED && match && match.length > 1) {\r\n        // Fix browsers whose `exec` methods don't consistently return `undefined`\r\n        // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\r\n        nativeReplace.call(match[0], reCopy, function () {\r\n          for (i = 1; i < arguments.length - 2; i++) {\r\n            if (arguments[i] === undefined) match[i] = undefined;\r\n          }\r\n        });\r\n      }\r\n\r\n      return match;\r\n    };\r\n  }\r\n\r\n  var regexpExec = patchedExec;\r\n\r\n  var SPECIES = wellKnownSymbol('species');\r\n\r\n  var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\r\n    // #replace needs built-in support for named groups.\r\n    // #match works fine because it just return the exec results, even if it has\r\n    // a \"grops\" property.\r\n    var re = /./;\r\n    re.exec = function () {\r\n      var result = [];\r\n      result.groups = { a: '7' };\r\n      return result;\r\n    };\r\n    return ''.replace(re, '$<a>') !== '7';\r\n  });\r\n\r\n  // Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\r\n  // Weex JS has frozen built-in prototypes, so use try / catch wrapper\r\n  var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\r\n    var re = /(?:)/;\r\n    var originalExec = re.exec;\r\n    re.exec = function () { return originalExec.apply(this, arguments); };\r\n    var result = 'ab'.split(re);\r\n    return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\r\n  });\r\n\r\n  var fixRegexpWellKnownSymbolLogic = function (KEY, length, exec, sham) {\r\n    var SYMBOL = wellKnownSymbol(KEY);\r\n\r\n    var DELEGATES_TO_SYMBOL = !fails(function () {\r\n      // String methods call symbol-named RegEp methods\r\n      var O = {};\r\n      O[SYMBOL] = function () { return 7; };\r\n      return ''[KEY](O) != 7;\r\n    });\r\n\r\n    var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\r\n      // Symbol-named RegExp methods call .exec\r\n      var execCalled = false;\r\n      var re = /a/;\r\n      re.exec = function () { execCalled = true; return null; };\r\n\r\n      if (KEY === 'split') {\r\n        // RegExp[@@split] doesn't call the regex's exec method, but first creates\r\n        // a new one. We need to return the patched regex when creating the new one.\r\n        re.constructor = {};\r\n        re.constructor[SPECIES] = function () { return re; };\r\n      }\r\n\r\n      re[SYMBOL]('');\r\n      return !execCalled;\r\n    });\r\n\r\n    if (\r\n      !DELEGATES_TO_SYMBOL ||\r\n      !DELEGATES_TO_EXEC ||\r\n      (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||\r\n      (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\r\n    ) {\r\n      var nativeRegExpMethod = /./[SYMBOL];\r\n      var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\r\n        if (regexp.exec === regexpExec) {\r\n          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\r\n            // The native String method already delegates to @@method (this\r\n            // polyfilled function), leasing to infinite recursion.\r\n            // We avoid it by directly calling the native @@method method.\r\n            return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\r\n          }\r\n          return { done: true, value: nativeMethod.call(str, regexp, arg2) };\r\n        }\r\n        return { done: false };\r\n      });\r\n      var stringMethod = methods[0];\r\n      var regexMethod = methods[1];\r\n\r\n      redefine(String.prototype, KEY, stringMethod);\r\n      redefine(RegExp.prototype, SYMBOL, length == 2\r\n        // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\r\n        // 21.2.5.11 RegExp.prototype[@@split](string, limit)\r\n        ? function (string, arg) { return regexMethod.call(string, this, arg); }\r\n        // 21.2.5.6 RegExp.prototype[@@match](string)\r\n        // 21.2.5.9 RegExp.prototype[@@search](string)\r\n        : function (string) { return regexMethod.call(string, this); }\r\n      );\r\n      if (sham) hide(RegExp.prototype[SYMBOL], 'sham', true);\r\n    }\r\n  };\r\n\r\n  // CONVERT_TO_STRING: true  -> String#at\r\n  // CONVERT_TO_STRING: false -> String#codePointAt\r\n  var stringAt = function (that, pos, CONVERT_TO_STRING) {\r\n    var S = String(requireObjectCoercible(that));\r\n    var position = toInteger(pos);\r\n    var size = S.length;\r\n    var first, second;\r\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\r\n    first = S.charCodeAt(position);\r\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\r\n      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF\r\n        ? CONVERT_TO_STRING ? S.charAt(position) : first\r\n        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\r\n  };\r\n\r\n  // `AdvanceStringIndex` abstract operation\r\n  // https://tc39.github.io/ecma262/#sec-advancestringindex\r\n  var advanceStringIndex = function (S, index, unicode) {\r\n    return index + (unicode ? stringAt(S, index, true).length : 1);\r\n  };\r\n\r\n  // `RegExpExec` abstract operation\r\n  // https://tc39.github.io/ecma262/#sec-regexpexec\r\n  var regexpExecAbstract = function (R, S) {\r\n    var exec = R.exec;\r\n    if (typeof exec === 'function') {\r\n      var result = exec.call(R, S);\r\n      if (typeof result !== 'object') {\r\n        throw TypeError('RegExp exec method returned something other than an Object or null');\r\n      }\r\n      return result;\r\n    }\r\n\r\n    if (classofRaw(R) !== 'RegExp') {\r\n      throw TypeError('RegExp#exec called on incompatible receiver');\r\n    }\r\n\r\n    return regexpExec.call(R, S);\r\n  };\r\n\r\n  // @@match logic\r\n  fixRegexpWellKnownSymbolLogic('match', 1, function (MATCH, nativeMatch, maybeCallNative) {\r\n    return [\r\n      // `String.prototype.match` method\r\n      // https://tc39.github.io/ecma262/#sec-string.prototype.match\r\n      function match(regexp) {\r\n        var O = requireObjectCoercible(this);\r\n        var matcher = regexp == undefined ? undefined : regexp[MATCH];\r\n        return matcher !== undefined ? matcher.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\r\n      },\r\n      // `RegExp.prototype[@@match]` method\r\n      // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match\r\n      function (regexp) {\r\n        var res = maybeCallNative(nativeMatch, regexp, this);\r\n        if (res.done) return res.value;\r\n\r\n        var rx = anObject(regexp);\r\n        var S = String(this);\r\n\r\n        if (!rx.global) return regexpExecAbstract(rx, S);\r\n\r\n        var fullUnicode = rx.unicode;\r\n        rx.lastIndex = 0;\r\n        var A = [];\r\n        var n = 0;\r\n        var result;\r\n        while ((result = regexpExecAbstract(rx, S)) !== null) {\r\n          var matchStr = String(result[0]);\r\n          A[n] = matchStr;\r\n          if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\r\n          n++;\r\n        }\r\n        return n === 0 ? null : A;\r\n      }\r\n    ];\r\n  });\r\n\r\n  var max$1 = Math.max;\r\n  var min$2 = Math.min;\r\n  var floor$1 = Math.floor;\r\n  var SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d\\d?|<[^>]*>)/g;\r\n  var SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d\\d?)/g;\r\n\r\n  var maybeToString = function (it) {\r\n    return it === undefined ? it : String(it);\r\n  };\r\n\r\n  // @@replace logic\r\n  fixRegexpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative) {\r\n    return [\r\n      // `String.prototype.replace` method\r\n      // https://tc39.github.io/ecma262/#sec-string.prototype.replace\r\n      function replace(searchValue, replaceValue) {\r\n        var O = requireObjectCoercible(this);\r\n        var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];\r\n        return replacer !== undefined\r\n          ? replacer.call(searchValue, O, replaceValue)\r\n          : nativeReplace.call(String(O), searchValue, replaceValue);\r\n      },\r\n      // `RegExp.prototype[@@replace]` method\r\n      // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\r\n      function (regexp, replaceValue) {\r\n        var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);\r\n        if (res.done) return res.value;\r\n\r\n        var rx = anObject(regexp);\r\n        var S = String(this);\r\n\r\n        var functionalReplace = typeof replaceValue === 'function';\r\n        if (!functionalReplace) replaceValue = String(replaceValue);\r\n\r\n        var global = rx.global;\r\n        if (global) {\r\n          var fullUnicode = rx.unicode;\r\n          rx.lastIndex = 0;\r\n        }\r\n        var results = [];\r\n        while (true) {\r\n          var result = regexpExecAbstract(rx, S);\r\n          if (result === null) break;\r\n\r\n          results.push(result);\r\n          if (!global) break;\r\n\r\n          var matchStr = String(result[0]);\r\n          if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\r\n        }\r\n\r\n        var accumulatedResult = '';\r\n        var nextSourcePosition = 0;\r\n        for (var i = 0; i < results.length; i++) {\r\n          result = results[i];\r\n\r\n          var matched = String(result[0]);\r\n          var position = max$1(min$2(toInteger(result.index), S.length), 0);\r\n          var captures = [];\r\n          // NOTE: This is equivalent to\r\n          //   captures = result.slice(1).map(maybeToString)\r\n          // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\r\n          // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\r\n          // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\r\n          for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\r\n          var namedCaptures = result.groups;\r\n          if (functionalReplace) {\r\n            var replacerArgs = [matched].concat(captures, position, S);\r\n            if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\r\n            var replacement = String(replaceValue.apply(undefined, replacerArgs));\r\n          } else {\r\n            replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\r\n          }\r\n          if (position >= nextSourcePosition) {\r\n            accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\r\n            nextSourcePosition = position + matched.length;\r\n          }\r\n        }\r\n        return accumulatedResult + S.slice(nextSourcePosition);\r\n      }\r\n    ];\r\n\r\n    // https://tc39.github.io/ecma262/#sec-getsubstitution\r\n    function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\r\n      var tailPos = position + matched.length;\r\n      var m = captures.length;\r\n      var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\r\n      if (namedCaptures !== undefined) {\r\n        namedCaptures = toObject(namedCaptures);\r\n        symbols = SUBSTITUTION_SYMBOLS;\r\n      }\r\n      return nativeReplace.call(replacement, symbols, function (match, ch) {\r\n        var capture;\r\n        switch (ch.charAt(0)) {\r\n          case '$': return '$';\r\n          case '&': return matched;\r\n          case '`': return str.slice(0, position);\r\n          case \"'\": return str.slice(tailPos);\r\n          case '<':\r\n            capture = namedCaptures[ch.slice(1, -1)];\r\n            break;\r\n          default: // \\d\\d?\r\n            var n = +ch;\r\n            if (n === 0) return match;\r\n            if (n > m) {\r\n              var f = floor$1(n / 10);\r\n              if (f === 0) return match;\r\n              if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\r\n              return match;\r\n            }\r\n            capture = captures[n - 1];\r\n        }\r\n        return capture === undefined ? '' : capture;\r\n      });\r\n    }\r\n  });\r\n\r\n  var MATCH = wellKnownSymbol('match');\r\n\r\n  // `IsRegExp` abstract operation\r\n  // https://tc39.github.io/ecma262/#sec-isregexp\r\n  var isRegexp = function (it) {\r\n    var isRegExp;\r\n    return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classofRaw(it) == 'RegExp');\r\n  };\r\n\r\n  var aFunction = function (it) {\r\n    if (typeof it != 'function') {\r\n      throw TypeError(String(it) + ' is not a function');\r\n    } return it;\r\n  };\r\n\r\n  var SPECIES$1 = wellKnownSymbol('species');\r\n\r\n  // `SpeciesConstructor` abstract operation\r\n  // https://tc39.github.io/ecma262/#sec-speciesconstructor\r\n  var speciesConstructor = function (O, defaultConstructor) {\r\n    var C = anObject(O).constructor;\r\n    var S;\r\n    return C === undefined || (S = anObject(C)[SPECIES$1]) == undefined ? defaultConstructor : aFunction(S);\r\n  };\r\n\r\n  var arrayPush = [].push;\r\n  var min$3 = Math.min;\r\n  var MAX_UINT32 = 0xFFFFFFFF;\r\n\r\n  // babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError\r\n  var SUPPORTS_Y = !fails(function () { return !RegExp(MAX_UINT32, 'y'); });\r\n\r\n  // @@split logic\r\n  fixRegexpWellKnownSymbolLogic('split', 2, function (SPLIT, nativeSplit, maybeCallNative) {\r\n    var internalSplit;\r\n    if (\r\n      'abbc'.split(/(b)*/)[1] == 'c' ||\r\n      'test'.split(/(?:)/, -1).length != 4 ||\r\n      'ab'.split(/(?:ab)*/).length != 2 ||\r\n      '.'.split(/(.?)(.?)/).length != 4 ||\r\n      '.'.split(/()()/).length > 1 ||\r\n      ''.split(/.?/).length\r\n    ) {\r\n      // based on es5-shim implementation, need to rework it\r\n      internalSplit = function (separator, limit) {\r\n        var string = String(requireObjectCoercible(this));\r\n        var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\r\n        if (lim === 0) return [];\r\n        if (separator === undefined) return [string];\r\n        // If `separator` is not a regex, use native split\r\n        if (!isRegexp(separator)) {\r\n          return nativeSplit.call(string, separator, lim);\r\n        }\r\n        var output = [];\r\n        var flags = (separator.ignoreCase ? 'i' : '') +\r\n                    (separator.multiline ? 'm' : '') +\r\n                    (separator.unicode ? 'u' : '') +\r\n                    (separator.sticky ? 'y' : '');\r\n        var lastLastIndex = 0;\r\n        // Make `global` and avoid `lastIndex` issues by working with a copy\r\n        var separatorCopy = new RegExp(separator.source, flags + 'g');\r\n        var match, lastIndex, lastLength;\r\n        while (match = regexpExec.call(separatorCopy, string)) {\r\n          lastIndex = separatorCopy.lastIndex;\r\n          if (lastIndex > lastLastIndex) {\r\n            output.push(string.slice(lastLastIndex, match.index));\r\n            if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));\r\n            lastLength = match[0].length;\r\n            lastLastIndex = lastIndex;\r\n            if (output.length >= lim) break;\r\n          }\r\n          if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop\r\n        }\r\n        if (lastLastIndex === string.length) {\r\n          if (lastLength || !separatorCopy.test('')) output.push('');\r\n        } else output.push(string.slice(lastLastIndex));\r\n        return output.length > lim ? output.slice(0, lim) : output;\r\n      };\r\n    // Chakra, V8\r\n    } else if ('0'.split(undefined, 0).length) {\r\n      internalSplit = function (separator, limit) {\r\n        return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);\r\n      };\r\n    } else internalSplit = nativeSplit;\r\n\r\n    return [\r\n      // `String.prototype.split` method\r\n      // https://tc39.github.io/ecma262/#sec-string.prototype.split\r\n      function split(separator, limit) {\r\n        var O = requireObjectCoercible(this);\r\n        var splitter = separator == undefined ? undefined : separator[SPLIT];\r\n        return splitter !== undefined\r\n          ? splitter.call(separator, O, limit)\r\n          : internalSplit.call(String(O), separator, limit);\r\n      },\r\n      // `RegExp.prototype[@@split]` method\r\n      // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split\r\n      //\r\n      // NOTE: This cannot be properly polyfilled in engines that don't support\r\n      // the 'y' flag.\r\n      function (regexp, limit) {\r\n        var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== nativeSplit);\r\n        if (res.done) return res.value;\r\n\r\n        var rx = anObject(regexp);\r\n        var S = String(this);\r\n        var C = speciesConstructor(rx, RegExp);\r\n\r\n        var unicodeMatching = rx.unicode;\r\n        var flags = (rx.ignoreCase ? 'i' : '') +\r\n                    (rx.multiline ? 'm' : '') +\r\n                    (rx.unicode ? 'u' : '') +\r\n                    (SUPPORTS_Y ? 'y' : 'g');\r\n\r\n        // ^(? + rx + ) is needed, in combination with some S slicing, to\r\n        // simulate the 'y' flag.\r\n        var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\r\n        var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\r\n        if (lim === 0) return [];\r\n        if (S.length === 0) return regexpExecAbstract(splitter, S) === null ? [S] : [];\r\n        var p = 0;\r\n        var q = 0;\r\n        var A = [];\r\n        while (q < S.length) {\r\n          splitter.lastIndex = SUPPORTS_Y ? q : 0;\r\n          var z = regexpExecAbstract(splitter, SUPPORTS_Y ? S : S.slice(q));\r\n          var e;\r\n          if (\r\n            z === null ||\r\n            (e = min$3(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p\r\n          ) {\r\n            q = advanceStringIndex(S, q, unicodeMatching);\r\n          } else {\r\n            A.push(S.slice(p, q));\r\n            if (A.length === lim) return A;\r\n            for (var i = 1; i <= z.length - 1; i++) {\r\n              A.push(z[i]);\r\n              if (A.length === lim) return A;\r\n            }\r\n            q = p = e;\r\n          }\r\n        }\r\n        A.push(S.slice(p));\r\n        return A;\r\n      }\r\n    ];\r\n  }, !SUPPORTS_Y);\r\n\r\n  // a string of all valid unicode whitespaces\r\n  // eslint-disable-next-line max-len\r\n  var whitespaces = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\r\n\r\n  var whitespace = '[' + whitespaces + ']';\r\n  var ltrim = RegExp('^' + whitespace + whitespace + '*');\r\n  var rtrim = RegExp(whitespace + whitespace + '*$');\r\n\r\n  // 1 -> String#trimStart\r\n  // 2 -> String#trimEnd\r\n  // 3 -> String#trim\r\n  var stringTrim = function (string, TYPE) {\r\n    string = String(requireObjectCoercible(string));\r\n    if (TYPE & 1) string = string.replace(ltrim, '');\r\n    if (TYPE & 2) string = string.replace(rtrim, '');\r\n    return string;\r\n  };\r\n\r\n  var non = '\\u200B\\u0085\\u180E';\r\n\r\n  // check that a method works with the correct list\r\n  // of whitespaces and has a correct name\r\n  var forcedStringTrimMethod = function (METHOD_NAME) {\r\n    return fails(function () {\r\n      return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;\r\n    });\r\n  };\r\n\r\n  var FORCED = forcedStringTrimMethod('trim');\r\n\r\n  // `String.prototype.trim` method\r\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trim\r\n  _export({ target: 'String', proto: true, forced: FORCED }, {\r\n    trim: function trim() {\r\n      return stringTrim(this, 3);\r\n    }\r\n  });\r\n\r\n  // iterable DOM collections\r\n  // flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\r\n  var domIterables = {\r\n    CSSRuleList: 0,\r\n    CSSStyleDeclaration: 0,\r\n    CSSValueList: 0,\r\n    ClientRectList: 0,\r\n    DOMRectList: 0,\r\n    DOMStringList: 0,\r\n    DOMTokenList: 1,\r\n    DataTransferItemList: 0,\r\n    FileList: 0,\r\n    HTMLAllCollection: 0,\r\n    HTMLCollection: 0,\r\n    HTMLFormElement: 0,\r\n    HTMLSelectElement: 0,\r\n    MediaList: 0,\r\n    MimeTypeArray: 0,\r\n    NamedNodeMap: 0,\r\n    NodeList: 1,\r\n    PaintRequestList: 0,\r\n    Plugin: 0,\r\n    PluginArray: 0,\r\n    SVGLengthList: 0,\r\n    SVGNumberList: 0,\r\n    SVGPathSegList: 0,\r\n    SVGPointList: 0,\r\n    SVGStringList: 0,\r\n    SVGTransformList: 0,\r\n    SourceBufferList: 0,\r\n    StyleSheetList: 0,\r\n    TextTrackCueList: 0,\r\n    TextTrackList: 0,\r\n    TouchList: 0\r\n  };\r\n\r\n  // optional / simple context binding\r\n  var bindContext = function (fn, that, length) {\r\n    aFunction(fn);\r\n    if (that === undefined) return fn;\r\n    switch (length) {\r\n      case 0: return function () {\r\n        return fn.call(that);\r\n      };\r\n      case 1: return function (a) {\r\n        return fn.call(that, a);\r\n      };\r\n      case 2: return function (a, b) {\r\n        return fn.call(that, a, b);\r\n      };\r\n      case 3: return function (a, b, c) {\r\n        return fn.call(that, a, b, c);\r\n      };\r\n    }\r\n    return function (/* ...args */) {\r\n      return fn.apply(that, arguments);\r\n    };\r\n  };\r\n\r\n  // `IsArray` abstract operation\r\n  // https://tc39.github.io/ecma262/#sec-isarray\r\n  var isArray = Array.isArray || function isArray(arg) {\r\n    return classofRaw(arg) == 'Array';\r\n  };\r\n\r\n  var SPECIES$2 = wellKnownSymbol('species');\r\n\r\n  // `ArraySpeciesCreate` abstract operation\r\n  // https://tc39.github.io/ecma262/#sec-arrayspeciescreate\r\n  var arraySpeciesCreate = function (originalArray, length) {\r\n    var C;\r\n    if (isArray(originalArray)) {\r\n      C = originalArray.constructor;\r\n      // cross-realm fallback\r\n      if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\r\n      else if (isObject(C)) {\r\n        C = C[SPECIES$2];\r\n        if (C === null) C = undefined;\r\n      }\r\n    } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\r\n  };\r\n\r\n  // `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation\r\n  // 0 -> Array#forEach\r\n  // https://tc39.github.io/ecma262/#sec-array.prototype.foreach\r\n  // 1 -> Array#map\r\n  // https://tc39.github.io/ecma262/#sec-array.prototype.map\r\n  // 2 -> Array#filter\r\n  // https://tc39.github.io/ecma262/#sec-array.prototype.filter\r\n  // 3 -> Array#some\r\n  // https://tc39.github.io/ecma262/#sec-array.prototype.some\r\n  // 4 -> Array#every\r\n  // https://tc39.github.io/ecma262/#sec-array.prototype.every\r\n  // 5 -> Array#find\r\n  // https://tc39.github.io/ecma262/#sec-array.prototype.find\r\n  // 6 -> Array#findIndex\r\n  // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\r\n  var arrayMethods = function (TYPE, specificCreate) {\r\n    var IS_MAP = TYPE == 1;\r\n    var IS_FILTER = TYPE == 2;\r\n    var IS_SOME = TYPE == 3;\r\n    var IS_EVERY = TYPE == 4;\r\n    var IS_FIND_INDEX = TYPE == 6;\r\n    var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\r\n    var create = specificCreate || arraySpeciesCreate;\r\n    return function ($this, callbackfn, that) {\r\n      var O = toObject($this);\r\n      var self = indexedObject(O);\r\n      var boundFunction = bindContext(callbackfn, that, 3);\r\n      var length = toLength(self.length);\r\n      var index = 0;\r\n      var target = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\r\n      var value, result;\r\n      for (;length > index; index++) if (NO_HOLES || index in self) {\r\n        value = self[index];\r\n        result = boundFunction(value, index, O);\r\n        if (TYPE) {\r\n          if (IS_MAP) target[index] = result; // map\r\n          else if (result) switch (TYPE) {\r\n            case 3: return true;              // some\r\n            case 5: return value;             // find\r\n            case 6: return index;             // findIndex\r\n            case 2: target.push(value);       // filter\r\n          } else if (IS_EVERY) return false;  // every\r\n        }\r\n      }\r\n      return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\r\n    };\r\n  };\r\n\r\n  var sloppyArrayMethod = function (METHOD_NAME, argument) {\r\n    var method = [][METHOD_NAME];\r\n    return !method || !fails(function () {\r\n      // eslint-disable-next-line no-useless-call,no-throw-literal\r\n      method.call(null, argument || function () { throw 1; }, 1);\r\n    });\r\n  };\r\n\r\n  var internalForEach = arrayMethods(0);\r\n  var SLOPPY_METHOD = sloppyArrayMethod('forEach');\r\n\r\n  // `Array.prototype.forEach` method implementation\r\n  // https://tc39.github.io/ecma262/#sec-array.prototype.foreach\r\n  var arrayForEach = SLOPPY_METHOD ? function forEach(callbackfn /* , thisArg */) {\r\n    return internalForEach(this, callbackfn, arguments[1]);\r\n  } : [].forEach;\r\n\r\n  for (var COLLECTION_NAME in domIterables) {\r\n    var Collection = global_1[COLLECTION_NAME];\r\n    var CollectionPrototype = Collection && Collection.prototype;\r\n    // some Chrome versions have non-configurable methods on DOMTokenList\r\n    if (CollectionPrototype && CollectionPrototype.forEach !== arrayForEach) try {\r\n      hide(CollectionPrototype, 'forEach', arrayForEach);\r\n    } catch (error) {\r\n      CollectionPrototype.forEach = arrayForEach;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * CoreUI Utilities (v2.1.11): get-css-custom-properties.js\r\n   * Licensed under MIT (https://coreui.io/license)\r\n   * @returns {string} css custom property name\r\n   * --------------------------------------------------------------------------\r\n   */\r\n  var getCssCustomProperties = function getCssCustomProperties() {\r\n    var cssCustomProperties = {};\r\n    var sheets = document.styleSheets;\r\n    var cssText = '';\r\n\r\n    for (var i = sheets.length - 1; i > -1; i--) {\r\n      var rules = sheets[i].cssRules;\r\n\r\n      for (var j = rules.length - 1; j > -1; j--) {\r\n        if (rules[j].selectorText === '.ie-custom-properties') {\r\n          cssText = rules[j].cssText;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (cssText) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    cssText = cssText.substring(cssText.lastIndexOf('{') + 1, cssText.lastIndexOf('}'));\r\n    cssText.split(';').forEach(function (property) {\r\n      if (property) {\r\n        var name = property.split(': ')[0];\r\n        var value = property.split(': ')[1];\r\n\r\n        if (name && value) {\r\n          cssCustomProperties[\"--\" + name.trim()] = value.trim();\r\n        }\r\n      }\r\n    });\r\n    return cssCustomProperties;\r\n  };\r\n\r\n  var minIEVersion = 10;\r\n\r\n  var isIE1x = function isIE1x() {\r\n    return Boolean(document.documentMode) && document.documentMode >= minIEVersion;\r\n  };\r\n\r\n  var isCustomProperty = function isCustomProperty(property) {\r\n    return property.match(/^--.*/i);\r\n  };\r\n\r\n  var getStyle = function getStyle(property, element) {\r\n    if (element === void 0) {\r\n      element = document.body;\r\n    }\r\n\r\n    var style;\r\n\r\n    if (isCustomProperty(property) && isIE1x()) {\r\n      var cssCustomProperties = getCssCustomProperties();\r\n      style = cssCustomProperties[property];\r\n    } else {\r\n      style = window.getComputedStyle(element, null).getPropertyValue(property).replace(/^\\s/, '');\r\n    }\r\n\r\n    return style;\r\n  };\r\n\r\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * CoreUI Utilities (v2.1.11): get-color.js\r\n   * Licensed under MIT (https://coreui.io/license)\r\n   * --------------------------------------------------------------------------\r\n   */\r\n\r\n  var getColor = function getColor(rawProperty, element) {\r\n    if (element === void 0) {\r\n      element = document.body;\r\n    }\r\n\r\n    var property = \"--\" + rawProperty;\r\n    var style = getStyle(property, element);\r\n    return style ? style : rawProperty;\r\n  };\r\n\r\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * CoreUI Utilities (v2.1.11): hex-to-rgb.js\r\n   * Licensed under MIT (https://coreui.io/license)\r\n   * --------------------------------------------------------------------------\r\n   */\r\n\r\n  /* eslint-disable no-magic-numbers */\r\n  var hexToRgb = function hexToRgb(color) {\r\n    if (typeof color === 'undefined') {\r\n      throw new Error('Hex color is not defined');\r\n    }\r\n\r\n    var hex = color.match(/^#(?:[0-9a-f]{3}){1,2}$/i);\r\n\r\n    if (!hex) {\r\n      throw new Error(color + \" is not a valid hex color\");\r\n    }\r\n\r\n    var r;\r\n    var g;\r\n    var b;\r\n\r\n    if (color.length === 7) {\r\n      r = parseInt(color.substring(1, 3), 16);\r\n      g = parseInt(color.substring(3, 5), 16);\r\n      b = parseInt(color.substring(5, 7), 16);\r\n    } else {\r\n      r = parseInt(color.substring(1, 2), 16);\r\n      g = parseInt(color.substring(2, 3), 16);\r\n      b = parseInt(color.substring(3, 5), 16);\r\n    }\r\n\r\n    return \"rgba(\" + r + \", \" + g + \", \" + b + \")\";\r\n  };\r\n\r\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * CoreUI Utilities (v2.1.11): hex-to-rgba.js\r\n   * Licensed under MIT (https://coreui.io/license)\r\n   * --------------------------------------------------------------------------\r\n   */\r\n\r\n  /* eslint-disable no-magic-numbers */\r\n  var hexToRgba = function hexToRgba(color, opacity) {\r\n    if (opacity === void 0) {\r\n      opacity = 100;\r\n    }\r\n\r\n    if (typeof color === 'undefined') {\r\n      throw new Error('Hex color is not defined');\r\n    }\r\n\r\n    var hex = color.match(/^#(?:[0-9a-f]{3}){1,2}$/i);\r\n\r\n    if (!hex) {\r\n      throw new Error(color + \" is not a valid hex color\");\r\n    }\r\n\r\n    var r;\r\n    var g;\r\n    var b;\r\n\r\n    if (color.length === 7) {\r\n      r = parseInt(color.substring(1, 3), 16);\r\n      g = parseInt(color.substring(3, 5), 16);\r\n      b = parseInt(color.substring(5, 7), 16);\r\n    } else {\r\n      r = parseInt(color.substring(1, 2), 16);\r\n      g = parseInt(color.substring(2, 3), 16);\r\n      b = parseInt(color.substring(3, 5), 16);\r\n    }\r\n\r\n    return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + opacity / 100 + \")\";\r\n  };\r\n\r\n  var createProperty = function (object, key, value) {\r\n    var propertyKey = toPrimitive(key);\r\n    if (propertyKey in object) objectDefineProperty.f(object, propertyKey, createPropertyDescriptor(0, value));\r\n    else object[propertyKey] = value;\r\n  };\r\n\r\n  var SPECIES$3 = wellKnownSymbol('species');\r\n\r\n  var arrayMethodHasSpeciesSupport = function (METHOD_NAME) {\r\n    return !fails(function () {\r\n      var array = [];\r\n      var constructor = array.constructor = {};\r\n      constructor[SPECIES$3] = function () {\r\n        return { foo: 1 };\r\n      };\r\n      return array[METHOD_NAME](Boolean).foo !== 1;\r\n    });\r\n  };\r\n\r\n  var SPECIES$4 = wellKnownSymbol('species');\r\n  var nativeSlice = [].slice;\r\n  var max$2 = Math.max;\r\n\r\n  var SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');\r\n\r\n  // `Array.prototype.slice` method\r\n  // https://tc39.github.io/ecma262/#sec-array.prototype.slice\r\n  // fallback for not array-like ES3 strings and DOM objects\r\n  _export({ target: 'Array', proto: true, forced: !SPECIES_SUPPORT }, {\r\n    slice: function slice(start, end) {\r\n      var O = toIndexedObject(this);\r\n      var length = toLength(O.length);\r\n      var k = toAbsoluteIndex(start, length);\r\n      var fin = toAbsoluteIndex(end === undefined ? length : end, length);\r\n      // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible\r\n      var Constructor, result, n;\r\n      if (isArray(O)) {\r\n        Constructor = O.constructor;\r\n        // cross-realm fallback\r\n        if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {\r\n          Constructor = undefined;\r\n        } else if (isObject(Constructor)) {\r\n          Constructor = Constructor[SPECIES$4];\r\n          if (Constructor === null) Constructor = undefined;\r\n        }\r\n        if (Constructor === Array || Constructor === undefined) {\r\n          return nativeSlice.call(O, k, fin);\r\n        }\r\n      }\r\n      result = new (Constructor === undefined ? Array : Constructor)(max$2(fin - k, 0));\r\n      for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);\r\n      result.length = n;\r\n      return result;\r\n    }\r\n  });\r\n\r\n  var TO_STRING_TAG = wellKnownSymbol('toStringTag');\r\n  // ES3 wrong here\r\n  var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\r\n\r\n  // fallback for IE11 Script Access Denied error\r\n  var tryGet = function (it, key) {\r\n    try {\r\n      return it[key];\r\n    } catch (error) { /* empty */ }\r\n  };\r\n\r\n  // getting tag from ES6+ `Object.prototype.toString`\r\n  var classof = function (it) {\r\n    var O, tag, result;\r\n    return it === undefined ? 'Undefined' : it === null ? 'Null'\r\n      // @@toStringTag case\r\n      : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag\r\n      // builtinTag case\r\n      : CORRECT_ARGUMENTS ? classofRaw(O)\r\n      // ES3 arguments fallback\r\n      : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;\r\n  };\r\n\r\n  var TO_STRING_TAG$1 = wellKnownSymbol('toStringTag');\r\n  var test = {};\r\n\r\n  test[TO_STRING_TAG$1] = 'z';\r\n\r\n  // `Object.prototype.toString` method implementation\r\n  // https://tc39.github.io/ecma262/#sec-object.prototype.tostring\r\n  var objectToString = String(test) !== '[object z]' ? function toString() {\r\n    return '[object ' + classof(this) + ']';\r\n  } : test.toString;\r\n\r\n  var ObjectPrototype = Object.prototype;\r\n\r\n  // `Object.prototype.toString` method\r\n  // https://tc39.github.io/ecma262/#sec-object.prototype.tostring\r\n  if (objectToString !== ObjectPrototype.toString) {\r\n    redefine(ObjectPrototype, 'toString', objectToString, { unsafe: true });\r\n  }\r\n\r\n  var TO_STRING = 'toString';\r\n  var nativeToString = /./[TO_STRING];\r\n  var RegExpPrototype = RegExp.prototype;\r\n\r\n  var NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\r\n  // FF44- RegExp#toString has a wrong name\r\n  var INCORRECT_NAME = nativeToString.name != TO_STRING;\r\n\r\n  // `RegExp.prototype.toString` method\r\n  // https://tc39.github.io/ecma262/#sec-regexp.prototype.tostring\r\n  if (NOT_GENERIC || INCORRECT_NAME) {\r\n    redefine(RegExp.prototype, TO_STRING, function toString() {\r\n      var R = anObject(this);\r\n      var p = String(R.source);\r\n      var rf = R.flags;\r\n      var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? regexpFlags.call(R) : rf);\r\n      return '/' + p + '/' + f;\r\n    }, { unsafe: true });\r\n  }\r\n\r\n  /**\r\n   * --------------------------------------------------------------------------\r\n   * CoreUI (v2.1.11): rgb-to-hex.js\r\n   * Licensed under MIT (https://coreui.io/license)\r\n   * --------------------------------------------------------------------------\r\n   */\r\n\r\n  /* eslint-disable no-magic-numbers */\r\n  var rgbToHex = function rgbToHex(color) {\r\n    if (typeof color === 'undefined') {\r\n      throw new Error('Hex color is not defined');\r\n    }\r\n\r\n    if (color === 'transparent') {\r\n      return '#00000000';\r\n    }\r\n\r\n    var rgb = color.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\r\n\r\n    if (!rgb) {\r\n      throw new Error(color + \" is not a valid rgb color\");\r\n    }\r\n\r\n    var r = \"0\" + parseInt(rgb[1], 10).toString(16);\r\n    var g = \"0\" + parseInt(rgb[2], 10).toString(16);\r\n    var b = \"0\" + parseInt(rgb[3], 10).toString(16);\r\n    return \"#\" + r.slice(-2) + g.slice(-2) + b.slice(-2);\r\n  };\r\n\r\n  exports.asideMenuCssClasses = asideMenuCssClasses;\r\n  exports.checkBreakpoint = checkBreakpoint;\r\n  exports.deepObjectsMerge = deepObjectsMerge;\r\n  exports.getColor = getColor;\r\n  exports.getStyle = getStyle;\r\n  exports.hexToRgb = hexToRgb;\r\n  exports.hexToRgba = hexToRgba;\r\n  exports.rgbToHex = rgbToHex;\r\n  exports.sidebarCssClasses = sidebarCssClasses;\r\n  exports.validBreakpoints = validBreakpoints;\r\n\r\n  Object.defineProperty(exports, '__esModule', { value: true });\r\n\r\n}));\r\n//# sourceMappingURL=coreui-utilities.js.map\r\n"],"sourceRoot":""}